# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:$HOME/.local/bin:/usr/local/bin:$PATH
# Path to your Oh My Zsh installation.
export ZSH="$HOME/.oh-my-zsh"
PROMPT='%F{green}%~ $>%f '

# Uncomment the following line to enable command auto-correction.
ENABLE_CORRECTION="true"

# Keep 1000 lines of history within the shell and save it to ~/.zsh_history:
HISTSIZE=1000
SAVEHIST=1000
HISTFILE=~/.zsh_history

# Use modern completion system
autoload -Uz compinit
compinit

zstyle ':completion:*' auto-description 'specify: %d'
zstyle ':completion:*' completer _expand _complete _correct _approximate
zstyle ':completion:*' format 'Completing %d'
zstyle ':completion:*' group-name ''
zstyle ':completion:*' menu select=2
eval "$(dircolors -b)"
zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*' list-colors ''
zstyle ':completion:*' list-prompt %SAt %p: Hit TAB for more, or the character to insert%s
zstyle ':completion:*' matcher-list '' 'm:{a-z}={A-Z}' 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=* l:|=*'
zstyle ':completion:*' menu select=long
zstyle ':completion:*' select-prompt %SScrolling active: current selection at %p%s
zstyle ':completion:*' use-compctl false
zstyle ':completion:*' verbose true
zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#)*=0=01;31'
zstyle ':completion:*:kill:*' command 'ps -u $USER -o pid,%cpu,tty,cputime,cmd'

# aliases
# Basic Commands
alias c='clear'
alias n="clear && norminette"
alias s='source ~/.zshrc'

# Advanced Commands
alias cc='cc -Wall -Wextra -Werror'
alias cw='cc -Wall -Wextra -Werror *.c'
alias r='c && cw && ./a.out && rm a.out'

ra() {
  c
  cw
  ./a.out "$@"
  rm a.out
}

rf() {
  c && cc -Wall -Wextra -Werror "$1" -o a.out && ./a.out && rm a.out
}

rfa() {
  c
  cc -Wall -Wextra -Werror "$1" -o a.out || return 1
  shift
  ./a.out "$@"
  rm a.out
}

newc() {
    for arg in "$@"; do
        filename="${arg}.c"
        filebase="$(basename "$filename")"
        funcname="${arg}"

        {
            echo "#include <unistd.h>"
            echo "#include <stdio.h>"
            echo "#include <string.h>"
            echo "#include <stdlib.h>"
            echo ""
            echo "void ${funcname}(void)"
            echo "{"
            echo ""
            echo "}"
            echo ""
            echo "int main(void)"
            echo "{"
            echo ""
            echo "    return (0);"
            echo "}"
        } > "$filename"

        echo "Criado: $filename"
    done
}


newh() {
    filename="$1.h"
    filebase="$(basename "$filename" .h)"
    macro_guard="$(echo "$filebase"_H | tr '[:lower:]' '[:upper:]')"

    {
        echo "#ifndef $macro_guard"
        echo "# define $macro_guard"
        echo ""
        echo "#endif"
    } > "$filename"
}

#Others
#alias check='valgrind ./a.out'
